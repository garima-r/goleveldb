version: 2.1
jobs:
  lint:
  working_directory: ~/repo
  docker:
    - image: circleci/golang:1.15
  steps:
    - checkout
    - run:
        name: Run gofmt
        command: gofmt
    - run:
        name: Run go vet
        command: go vet -v ./...
    - run:
        name: Run golint
        command: |
          go get -u golang.org/x/lint/golint
          golint ./...

  build:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - restore_cache:
          name: Restore Cache
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          name: Save Cache
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Execute build
          command: go build -v ./...
  
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - restore_cache:
          name: Restore Cache
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          name: Save Cache
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run Unit Tests
          command: go test -timeout 30m -race -run "TestDB_(Concurrent|GoleveldbIssue74)" ./leveldb

workflows:
  build_and_test:
    jobs:
      - lint
      - build:
          filters: &filters-staging
            branches:
              only:
                - staging
      - test:
          requires:
            - build
          filters:
            <<: *filters-staging
